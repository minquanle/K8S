# src/main/resources/application.properties
# H2 in-memory datasource
spring.datasource.url=jdbc:h2:mem:demo;DB_CLOSE_DELAY=-1;MODE=PostgreSQL
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# JPA/Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# H2 Console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# Thymeleaf
spring.thymeleaf.cache=false

# JWT config (for local /api/auth/login, not OIDC)
# 256-bit Base64 key example; change in real usage
app.jwt.secret=VGhpc0lzQVN1cGVyU2VjdXJlS2V5VGhhdElzTG9uZ0Vub3VnaDMyQnl0ZXMhIQ==
app.jwt.expiration-ms=3600000

# --- OIDC (Auth0) configuration ---
# IMPORTANT: You MUST replace these placeholder values.
# The application will FAIL to start if the domain is not a valid Auth0 domain.
# You can replace them here directly for a quick test, or set environment variables.
#
# Option 1: Set Environment Variables (Recommended)
# In a NEW terminal, run these commands with your real Auth0 values:
# setx AUTH0_DOMAIN "your-tenant.us.auth0.com"
# setx AUTH0_CLIENT_ID "your-real-client-id"
# setx AUTH0_CLIENT_SECRET "your-real-client-secret"
# setx AUTH0_AUDIENCE "https://your-api-identifier"  (Optional, for API + RBAC)
#
# Option 2: Hardcode values here for testing (NOT for production)
app.auth0.domain=${AUTH0_DOMAIN:your-tenant.eu.auth0.com}
app.auth0.roles-claim=${AUTH0_ROLES_CLAIM:permissions}
# This property is controlled by the AUTH0_AUDIENCE environment variable.
# If the variable is not set, no audience will be requested.
app.auth0.audience=${AUTH0_AUDIENCE:}

spring.security.oauth2.client.registration.auth0.client-id=${AUTH0_CLIENT_ID:REPLACE_WITH_YOUR_CLIENT_ID}
spring.security.oauth2.client.registration.auth0.client-secret=${AUTH0_CLIENT_SECRET:REPLACE_WITH_YOUR_CLIENT_SECRET}
spring.security.oauth2.client.registration.auth0.scope=openid,profile,email
spring.security.oauth2.client.registration.auth0.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.auth0.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

spring.security.oauth2.client.provider.auth0.issuer-uri=https://${app.auth0.domain}/
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://${app.auth0.domain}/

# Optional debug logging
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG
logging.level.org.springframework.web.client=DEBUG

server.port=8085
